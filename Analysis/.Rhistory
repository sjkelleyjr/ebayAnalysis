a<-available.packages()
head(rownames(a),3)
a
clear
install.packages("slidify")
install.packages(c("slidify","gglot2","devtools"))
install.packages(c("sldify", "ggplot2", "devtools"))
View(a)
source ("http://bioconductor.org/biocLite.R")
biocLite()
library(ggplot2)
search
search()
install.packages("KernSmooth")
library(KernSmooth)
library(ggplot2)
search()
getwd()
setwd("/home/sj/datasciencecoursera/")
load("~/datasciencecoursera/Project3/UCI HAR Dataset/.RData")
stormData%PROPGMGEXP
stormData%PROPDMGEXP
source('~/.active-rstudio-document', echo=TRUE)
setwd("/home/sj/")
getwd()
install.packages("ggmap")
setwd("~/")
data = read.csv('regressionDAta.csv',header=TRUE)
head(data)
library(ggplot2)
ggplot(data, aes(DAY,ETH))
plot = ggplot(data, aes(DAY,ETH))
plot + geom_point(DAY,ETH)
plot + geom_point(data, DAY,ETH)
ggplot(data, aes(DAY,ETH)) + geom_point(DAY,ETH)
ggplot(data, aes(DAY,ETH)) + geom_point(data, DAY,ETH)
ggplot(data, aes(DAY,ETH)) + geom_point()
ggplot(data, aes(DAY,ETH)) + geom_point() + geom_smooth(method=lm)
LM = lm(ETH ~ DAY,data=data)
LM
LM(ETH = 0)
head(data)
DF = data.frame(DAY=numeric(), ETH=numeric())
head DF
head(DF)
DF = data.frame(DAY=integer(), ETH=double())
predict(LM,data.frame(DAY=1))
predict(LM,data.frame(DAY=10))
predict(LM,data.frame(DAY=100))
LM = lm(DAY ~ ETH,data=data)
predict(LM,data.frame(ETH=0))
install.packages(markdown)
install.packages('markdown')
setwd("~/ebayProject/Analysis")
library(markdown)
rpubsUpload(title = 'Initial Analysis', htmlFile='November5.html', method=getOption('rpubs.upload.method'),'auto')
rpubsUpload(title = 'Initial Analysis', htmlFile='November5.html', method=getOption('rpubs.upload.method','auto'))
rpubsUpload(title = 'Presentation', htmlFile='presentation2.html', method=getOption('rpubs.upload.method','auto'))
